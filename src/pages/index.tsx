import Head from 'next/head';
import Image from 'next/image';
import { Lato } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { useEffect, useRef, useState } from 'react';

// Icons
import { BsClouds, BsDropletHalf, BsWind } from 'react-icons/bs';
import { BiSearchAlt } from 'react-icons/bi';
import { WeatherProps } from '@/types/weather.types';
import { WeatherIcon } from '@/components/WeatherIcon';

const lato = Lato({ subsets: ['latin'], weight: '400' });

export default function Home() {
  const [loc, setLoc] = useState({ lat: 44.34, lon: 10.99 });
  const [currentWeather, setCurrentWeather] = useState<WeatherProps>();
  const searchInputRef = useRef<HTMLInputElement>(null);

  const handleSearchIconClick = () => {
    searchInputRef.current?.focus();
  };

  useEffect(() => {
    const fetchData = async () => {
      const response = await fetch(
        `/api/currentWeather?lat=${loc.lat}&lon=${loc.lon}`
      );
      const data = await response.json();

      setCurrentWeather(data);
      console.log(data.weatherId);
    };

    fetchData();
  }, [loc]);

  // const icons = [{ range: [801, 804], icon: BsClouds }];

  // const getIcon = (number: number) => {
  //   for (let i = 0; i < icons.length; i++) {
  //     const { range, icon } = icons[i];
  //     if (number >= range[0] && number <= range[1]) {
  //       return icon;
  //     }
  //   }

  //   return BsClouds;
  // };

  // const WeatherIcon = ({ number }) => {
  //   const Icon = getIcon(number);
  //   return <Icon />;
  // };

  return (
    <>
      <Head>
        <title>React Weather API App</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link
          rel="icon"
          href="/favicon.ico"
        />
      </Head>
      <main className={`${styles.main} ${lato.className}`}>
        <div className={styles.weather_container}>
          <div className={styles.top_bar}>
            <div className={styles.location}>
              <p>{currentWeather?.location}</p>
            </div>
            <div className={styles.search_container}>
              <input
                className={styles.search_input}
                ref={searchInputRef}
                type="text"
                placeholder="search"
              />
              <button
                className={styles.search_icon}
                onClick={handleSearchIconClick}
              >
                <BiSearchAlt size="1.5rem" />
              </button>
            </div>
          </div>
          <div className={styles.weather_type_container}>
            <WeatherIcon id={currentWeather?.weatherId} />
            <p>{currentWeather?.weatherType}</p>
            <ul className={styles.day_selection_list}>
              <li className={`${styles.day} ${styles.day_active}`}>
                <button>S</button>
              </li>
              <li className={`${styles.day}`}>
                <button>M</button>
              </li>
              <li className={`${styles.day}`}>
                <button>T</button>
              </li>
              <li className={`${styles.day}`}>
                <button>W</button>
              </li>
              <li className={`${styles.day}`}>
                <button>T</button>
              </li>
              <li className={`${styles.day}`}>
                <button>F</button>
              </li>
              <li className={`${styles.day}`}>
                <button>S</button>
              </li>
            </ul>
          </div>
          <div className={styles.weather_info_container}>
            <div className={styles.weather_detail_wrapper}>
              <div className={styles.weather_detail}>
                <BsWind />
                <p>{currentWeather?.windSpeed}</p>
              </div>
              <div className={styles.weather_detail}>
                <BsDropletHalf />
                <p>{currentWeather?.humidity}</p>
              </div>
              <div className={styles.weather_detail}>
                <BsClouds />
                <p>{currentWeather?.clouds}</p>
              </div>
            </div>
            <div className={styles.temperature}>
              {currentWeather?.currentTemp}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
